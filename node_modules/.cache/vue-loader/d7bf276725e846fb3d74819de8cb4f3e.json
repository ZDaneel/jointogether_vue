{"remainingRequest":"/Users/zdaneel/Desktop/短学期/project/myproj/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zdaneel/Desktop/短学期/project/myproj/vue/src/views/Dashbord.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zdaneel/Desktop/短学期/project/myproj/vue/src/views/Dashbord.vue","mtime":1654745499212},{"path":"/Users/zdaneel/Desktop/短学期/project/myproj/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zdaneel/Desktop/短学期/project/myproj/vue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/zdaneel/Desktop/短学期/project/myproj/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zdaneel/Desktop/短学期/project/myproj/vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCAqIGFzIGVjaGFydHMgZnJvbSAnZWNoYXJ0cycKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiSG9tZSIsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG1lbWJlcnM6IDAsCiAgICAgIGdvb2RzTnVtOiAwLAogICAgICBzYWxlczogMCwKICAgICAgY2F0ZWdvcnlOdW06IDAsCiAgICB9CiAgfSwKICBtb3VudGVkKCkgeyAgLy8g6aG16Z2i5YWD57Sg5riy5p+T5LmL5ZCO5YaN6Kem5Y+RCiAgICBsZXQgb3B0aW9uID0gewogICAgICB0aXRsZTogewogICAgICAgIHRleHQ6ICflkITlraPluqbnlKjmiLfmlbDph4/nu5/orqEnLAogICAgICAgIHN1YnRleHQ6ICfotovlir/lm74nLAogICAgICAgIGxlZnQ6ICdjZW50ZXInCiAgICAgIH0sCiAgICAgIHRvb2x0aXA6IHsKICAgICAgICB0cmlnZ2VyOiAnaXRlbScKICAgICAgfSwKICAgICAgbGVnZW5kOiB7CiAgICAgICAgb3JpZW50OiAndmVydGljYWwnLAogICAgICAgIGxlZnQ6ICdsZWZ0JwogICAgICB9LAogICAgICB4QXhpczogewogICAgICAgIHR5cGU6ICdjYXRlZ29yeScsCiAgICAgICAgZGF0YTogWyLnrKzkuIDlraPluqYiLCAi56ys5LqM5a2j5bqmIiwgIuesrOS4ieWto+W6piIsICLnrKzlm5vlraPluqYiXQogICAgICB9LAogICAgICB5QXhpczogewogICAgICAgIHR5cGU6ICd2YWx1ZScKICAgICAgfSwKICAgICAgc2VyaWVzOiBbCiAgICAgICAgewogICAgICAgICAgbmFtZTogIumihuePrSIsCiAgICAgICAgICBkYXRhOiBbXSwKICAgICAgICAgIHR5cGU6ICdiYXInCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBuYW1lOiAi6aKG54+tIiwKICAgICAgICAgIGRhdGE6IFtdLAogICAgICAgICAgdHlwZTogJ2xpbmUnCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBuYW1lOiAi5ZGY5belIiwKICAgICAgICAgIGRhdGE6IFtdLAogICAgICAgICAgdHlwZTogJ2JhcicKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIG5hbWU6ICLlkZjlt6UiLAogICAgICAgICAgZGF0YTogW10sCiAgICAgICAgICB0eXBlOiAnbGluZScKICAgICAgICB9CiAgICAgIF0KICAgIH07CgogICAgLy8g6aW85Zu+CiAgICBsZXQgcGllT3B0aW9uID0gewogICAgICB0aXRsZTogewogICAgICAgIHRleHQ6ICflkITlraPluqbkvJrlkZjmlbDph4/nu5/orqEnLAogICAgICAgIHN1YnRleHQ6ICfmr5Tkvovlm74nLAogICAgICAgIGxlZnQ6ICdjZW50ZXInCiAgICAgIH0sCiAgICAgIHRvb2x0aXA6IHsKICAgICAgICB0cmlnZ2VyOiAnaXRlbScsCiAgICAgICAgZm9ybWF0dGVyOiAne2F9IDxici8+e2J9IDoge2N9ICh7ZH0lKScKICAgICAgfSwKICAgICAgbGVnZW5kOiB7CiAgICAgICAgb3JpZW50OiAndmVydGljYWwnLAogICAgICAgIGxlZnQ6ICdsZWZ0JwogICAgICB9LAogICAgICBzZXJpZXM6IFsKICAgICAgICB7CiAgICAgICAgICBuYW1lOiAi6aKG54+tIiwKICAgICAgICAgIHR5cGU6ICdwaWUnLAogICAgICAgICAgcmFkaXVzOiAnNTUlJywKICAgICAgICAgIGNlbnRlcjogWycyNSUnLCAnNzAlJ10sCiAgICAgICAgICBsYWJlbDp7ICAgICAgICAgICAgLy/ppbzlm77lm77lvaLkuIrnmoTmlofmnKzmoIfnrb4KICAgICAgICAgICAgbm9ybWFsOnsKICAgICAgICAgICAgICBzaG93OnRydWUsCiAgICAgICAgICAgICAgcG9zaXRpb246J2lubmVyJywgLy/moIfnrb7nmoTkvY3nva4KICAgICAgICAgICAgICB0ZXh0U3R5bGUgOiB7CiAgICAgICAgICAgICAgICBmb250V2VpZ2h0IDogMzAwICwKICAgICAgICAgICAgICAgIGZvbnRTaXplIDogMTQsICAgIC8v5paH5a2X55qE5a2X5L2T5aSn5bCPCiAgICAgICAgICAgICAgICBjb2xvcjogIiNmZmYiCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBmb3JtYXR0ZXI6J3tjfSh7ZH0lKScKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIGRhdGE6IFtdLCAgLy8g5aGr56m6CiAgICAgICAgICBlbXBoYXNpczogewogICAgICAgICAgICBpdGVtU3R5bGU6IHsKICAgICAgICAgICAgICBzaGFkb3dCbHVyOiAxMCwKICAgICAgICAgICAgICBzaGFkb3dPZmZzZXRYOiAwLAogICAgICAgICAgICAgIHNoYWRvd0NvbG9yOiAncmdiYSgwLCAwLCAwLCAwLjUpJwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBuYW1lOiAi5ZGY5belIiwKICAgICAgICAgIHR5cGU6ICdwaWUnLAogICAgICAgICAgcmFkaXVzOiAnNTAlJywKICAgICAgICAgIGNlbnRlcjogWyc3NSUnLCAnNTAlJ10sCiAgICAgICAgICBsYWJlbDp7ICAgICAgICAgICAgLy/ppbzlm77lm77lvaLkuIrnmoTmlofmnKzmoIfnrb4KICAgICAgICAgICAgbm9ybWFsOnsKICAgICAgICAgICAgICBzaG93OnRydWUsCiAgICAgICAgICAgICAgcG9zaXRpb246J2lubmVyJywgLy/moIfnrb7nmoTkvY3nva4KICAgICAgICAgICAgICB0ZXh0U3R5bGUgOiB7CiAgICAgICAgICAgICAgICBmb250V2VpZ2h0IDogMzAwICwKICAgICAgICAgICAgICAgIGZvbnRTaXplIDogMTQsICAgIC8v5paH5a2X55qE5a2X5L2T5aSn5bCPCiAgICAgICAgICAgICAgICBjb2xvcjogIiNmZmYiCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBmb3JtYXR0ZXI6J3tkfSUnCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBkYXRhOiBbCiAgICAgICAgICAgIHtuYW1lOiAi56ys5LiA5a2j5bqmIiwgdmFsdWU6IDV9LAogICAgICAgICAgICB7bmFtZTogIuesrOS6jOWto+W6piIsIHZhbHVlOiA2fSwKICAgICAgICAgICAge25hbWU6ICLnrKzkuInlraPluqYiLCB2YWx1ZTogN30sCiAgICAgICAgICAgIHtuYW1lOiAi56ys5Zub5a2j5bqmIiwgdmFsdWU6IDh9CiAgICAgICAgICAgIF0sICAvLyDloavnqboKICAgICAgICAgIGVtcGhhc2lzOiB7CiAgICAgICAgICAgIGl0ZW1TdHlsZTogewogICAgICAgICAgICAgIHNoYWRvd0JsdXI6IDEwLAogICAgICAgICAgICAgIHNoYWRvd09mZnNldFg6IDAsCiAgICAgICAgICAgICAgc2hhZG93Q29sb3I6ICdyZ2JhKDAsIDAsIDAsIDAuNSknCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIF0sCgogICAgfTsKCgogICAgbGV0IGNoYXJ0RG9tID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21haW4nKTsKICAgIGxldCBteUNoYXJ0ID0gZWNoYXJ0cy5pbml0KGNoYXJ0RG9tKTsKCiAgICBsZXQgcGllRG9tID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3BpZScpOwogICAgbGV0IHBpZUNoYXJ0ID0gZWNoYXJ0cy5pbml0KHBpZURvbSk7CgogICAgdGhpcy5yZXF1ZXN0LmdldCgiL2VjaGFydHMvbWVtYmVycyIpLnRoZW4ocmVzID0+IHsKICAgICAgLy8g5aGr56m6CiAgICAgIC8vIG9wdGlvbi54QXhpcy5kYXRhID0gcmVzLmRhdGEueAogICAgICBvcHRpb24uc2VyaWVzWzBdLmRhdGEgPSByZXMuZGF0YS5mb3JlRGF0YS5kYXRhCiAgICAgIG9wdGlvbi5zZXJpZXNbMV0uZGF0YSA9IHJlcy5kYXRhLmZvcmVEYXRhLmRhdGEKCiAgICAgIG9wdGlvbi5zZXJpZXNbMl0uZGF0YSA9IHJlcy5kYXRhLnN0YWZmRGF0YS5kYXRhCiAgICAgIG9wdGlvbi5zZXJpZXNbM10uZGF0YSA9IHJlcy5kYXRhLnN0YWZmRGF0YS5kYXRhCiAgICAgIC8vIOaVsOaNruWHhuWkh+WujOavleS5i+WQjuWGjXNldAogICAgICBteUNoYXJ0LnNldE9wdGlvbihvcHRpb24pOwoKCiAgICAgIHBpZU9wdGlvbi5zZXJpZXNbMF0uZGF0YSA9IFsKICAgICAgICB7bmFtZTogIuesrOS4gOWto+W6piIsIHZhbHVlOiByZXMuZGF0YS5mb3JlRGF0YS5kYXRhWzBdfSwKICAgICAgICB7bmFtZTogIuesrOS6jOWto+W6piIsIHZhbHVlOiByZXMuZGF0YS5mb3JlRGF0YS5kYXRhWzFdfSwKICAgICAgICB7bmFtZTogIuesrOS4ieWto+W6piIsIHZhbHVlOiByZXMuZGF0YS5mb3JlRGF0YS5kYXRhWzJdfSwKICAgICAgICB7bmFtZTogIuesrOWbm+Wto+W6piIsIHZhbHVlOiByZXMuZGF0YS5mb3JlRGF0YS5kYXRhWzNdfSwKICAgICAgXSwKICAgICAgcGllT3B0aW9uLnNlcmllc1sxXS5kYXRhID0gWwogICAgICAgIHtuYW1lOiAi56ys5LiA5a2j5bqmIiwgdmFsdWU6IHJlcy5kYXRhLnN0YWZmRGF0YS5kYXRhWzBdfSwKICAgICAgICB7bmFtZTogIuesrOS6jOWto+W6piIsIHZhbHVlOiByZXMuZGF0YS5zdGFmZkRhdGEuZGF0YVsxXX0sCiAgICAgICAge25hbWU6ICLnrKzkuInlraPluqYiLCB2YWx1ZTogcmVzLmRhdGEuc3RhZmZEYXRhLmRhdGFbMl19LAogICAgICAgIHtuYW1lOiAi56ys5Zub5a2j5bqmIiwgdmFsdWU6IHJlcy5kYXRhLnN0YWZmRGF0YS5kYXRhWzNdfSwKICAgICAgXSwKICAgICAgcGllQ2hhcnQuc2V0T3B0aW9uKHBpZU9wdGlvbikKICAgIH0pCgogICAgLy/nlKjmiLfmgLvmlbAKICAgIHRoaXMucmVxdWVzdC5nZXQoIi91c2VyIikudGhlbihyZXMgPT4gewogICAgICBpZiAocmVzLmNvZGUgPT09ICcyMDAnKSB7CiAgICAgICAgdGhpcy5tZW1iZXJzID0gcmVzLmRhdGEubGVuZ3RoCiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcigi5L+d5a2Y5aSx6LSlIikKICAgICAgfQogICAgfSkKCiAgICAvL+WVhuWTgeaAu+aVsOWSjOaAu+S7twogICAgdGhpcy5yZXF1ZXN0LmdldCgiL2dvb2QiKS50aGVuKHJlcyA9PiB7CiAgICAgIGlmIChyZXMuY29kZSA9PT0gJzIwMCcpIHsKICAgICAgICAvL2NvbnNvbGUubG9nKHJlcy5kYXRhWzBdLnByaWNlKQogICAgICAgIHRoaXMuZ29vZHNOdW0gPSByZXMuZGF0YS5sZW5ndGgKICAgICAgICBsZXQgc3VtID0gMAogICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5nb29kc051bTsgaSsrKSB7CiAgICAgICAgICBzdW0gKz0gcmVzLmRhdGFbaV0ucHJpY2UKICAgICAgICB9CiAgICAgICAgdGhpcy5zYWxlcyA9IHN1bQogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoIuS/neWtmOWksei0pSIpCiAgICAgIH0KICAgIH0pCgogICAgLy/llYblk4HnsbvliKvmlbAKICAgIHRoaXMucmVxdWVzdC5nZXQoIi9jYXRlZ29yeSIpLnRoZW4ocmVzID0+IHsKICAgICAgaWYgKHJlcy5jb2RlID09PSAnMjAwJykgewogICAgICAgIHRoaXMuY2F0ZWdvcnlOdW0gPSByZXMuZGF0YS5sZW5ndGgKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCLkv53lrZjlpLHotKUiKQogICAgICB9CiAgICB9KQogIH0sCn0K"},{"version":3,"sources":["Dashbord.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"Dashbord.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <el-row :gutter=\"10\" style=\"margin-bottom: 60px\">\n      <el-col :span=\"6\">\n        <el-card style=\"color: #409EFF\">\n          <div><i class=\"el-icon-user-solid\" /> 用户总数</div>\n          <div style=\"padding: 10px 0; text-align: center; font-weight: bold\">\n            {{ members }}\n          </div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"6\">\n        <el-card style=\"color: #F56C6C\">\n          <div><i class=\"el-icon-money\" /> 商品总数</div>\n          <div style=\"padding: 10px 0; text-align: center; font-weight: bold\">\n            {{ goodsNum }}\n          </div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"6\">\n        <el-card style=\"color: #67C23A\">\n          <div><i class=\"el-icon-bank-card\" /> 商品价值总和</div>\n          <div style=\"padding: 10px 0; text-align: center; font-weight: bold\">\n            ￥ {{ sales }}\n          </div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"6\">\n        <el-card style=\"color: #E6A23C\">\n          <div><i class=\"el-icon-s-shop\" /> 商品类别总数</div>\n          <div style=\"padding: 10px 0; text-align: center; font-weight: bold\">\n            {{ categoryNum }}\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n    <el-row>\n      <el-col :span=\"12\">\n        <div id=\"main\" style=\"width: 500px; height: 450px\"></div>\n      </el-col>\n\n      <el-col :span=\"12\">\n        <div id=\"pie\" style=\"width: 500px; height: 400px\"></div>\n      </el-col>\n    </el-row>\n\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts'\n\nexport default {\n  name: \"Home\",\n  data() {\n    return {\n      members: 0,\n      goodsNum: 0,\n      sales: 0,\n      categoryNum: 0,\n    }\n  },\n  mounted() {  // 页面元素渲染之后再触发\n    let option = {\n      title: {\n        text: '各季度用户数量统计',\n        subtext: '趋势图',\n        left: 'center'\n      },\n      tooltip: {\n        trigger: 'item'\n      },\n      legend: {\n        orient: 'vertical',\n        left: 'left'\n      },\n      xAxis: {\n        type: 'category',\n        data: [\"第一季度\", \"第二季度\", \"第三季度\", \"第四季度\"]\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series: [\n        {\n          name: \"领班\",\n          data: [],\n          type: 'bar'\n        },\n        {\n          name: \"领班\",\n          data: [],\n          type: 'line'\n        },\n        {\n          name: \"员工\",\n          data: [],\n          type: 'bar'\n        },\n        {\n          name: \"员工\",\n          data: [],\n          type: 'line'\n        }\n      ]\n    };\n\n    // 饼图\n    let pieOption = {\n      title: {\n        text: '各季度会员数量统计',\n        subtext: '比例图',\n        left: 'center'\n      },\n      tooltip: {\n        trigger: 'item',\n        formatter: '{a} <br/>{b} : {c} ({d}%)'\n      },\n      legend: {\n        orient: 'vertical',\n        left: 'left'\n      },\n      series: [\n        {\n          name: \"领班\",\n          type: 'pie',\n          radius: '55%',\n          center: ['25%', '70%'],\n          label:{            //饼图图形上的文本标签\n            normal:{\n              show:true,\n              position:'inner', //标签的位置\n              textStyle : {\n                fontWeight : 300 ,\n                fontSize : 14,    //文字的字体大小\n                color: \"#fff\"\n              },\n              formatter:'{c}({d}%)'\n            }\n          },\n          data: [],  // 填空\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          }\n        },\n        {\n          name: \"员工\",\n          type: 'pie',\n          radius: '50%',\n          center: ['75%', '50%'],\n          label:{            //饼图图形上的文本标签\n            normal:{\n              show:true,\n              position:'inner', //标签的位置\n              textStyle : {\n                fontWeight : 300 ,\n                fontSize : 14,    //文字的字体大小\n                color: \"#fff\"\n              },\n              formatter:'{d}%'\n            }\n          },\n          data: [\n            {name: \"第一季度\", value: 5},\n            {name: \"第二季度\", value: 6},\n            {name: \"第三季度\", value: 7},\n            {name: \"第四季度\", value: 8}\n            ],  // 填空\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          }\n        }\n      ],\n\n    };\n\n\n    let chartDom = document.getElementById('main');\n    let myChart = echarts.init(chartDom);\n\n    let pieDom = document.getElementById('pie');\n    let pieChart = echarts.init(pieDom);\n\n    this.request.get(\"/echarts/members\").then(res => {\n      // 填空\n      // option.xAxis.data = res.data.x\n      option.series[0].data = res.data.foreData.data\n      option.series[1].data = res.data.foreData.data\n\n      option.series[2].data = res.data.staffData.data\n      option.series[3].data = res.data.staffData.data\n      // 数据准备完毕之后再set\n      myChart.setOption(option);\n\n\n      pieOption.series[0].data = [\n        {name: \"第一季度\", value: res.data.foreData.data[0]},\n        {name: \"第二季度\", value: res.data.foreData.data[1]},\n        {name: \"第三季度\", value: res.data.foreData.data[2]},\n        {name: \"第四季度\", value: res.data.foreData.data[3]},\n      ],\n      pieOption.series[1].data = [\n        {name: \"第一季度\", value: res.data.staffData.data[0]},\n        {name: \"第二季度\", value: res.data.staffData.data[1]},\n        {name: \"第三季度\", value: res.data.staffData.data[2]},\n        {name: \"第四季度\", value: res.data.staffData.data[3]},\n      ],\n      pieChart.setOption(pieOption)\n    })\n\n    //用户总数\n    this.request.get(\"/user\").then(res => {\n      if (res.code === '200') {\n        this.members = res.data.length\n      } else {\n        this.$message.error(\"保存失败\")\n      }\n    })\n\n    //商品总数和总价\n    this.request.get(\"/good\").then(res => {\n      if (res.code === '200') {\n        //console.log(res.data[0].price)\n        this.goodsNum = res.data.length\n        let sum = 0\n        for (let i = 0; i < this.goodsNum; i++) {\n          sum += res.data[i].price\n        }\n        this.sales = sum\n      } else {\n        this.$message.error(\"保存失败\")\n      }\n    })\n\n    //商品类别数\n    this.request.get(\"/category\").then(res => {\n      if (res.code === '200') {\n        this.categoryNum = res.data.length\n      } else {\n        this.$message.error(\"保存失败\")\n      }\n    })\n  },\n}\n</script>\n\n<style scoped>\n\n</style>\n"]}]}